{"ast":null,"code":"// import { Reducer, useReducer } from \"react\";\n\n// interface Data {\n//     a: {\n//         c: {\n//             e: number,\n//             f: number\n//         },\n//         d: number\n//     },\n//     b: number\n// }\n\n// interface Action {\n//     type: 'add',\n//     num: number\n// }\n\n// function reducer(state: Data, action: Action) {\n\n//     switch(action.type) {\n//         case 'add':\n//             return {\n//                 ...state,\n//                 a: {\n//                     ...state.a,\n//                     c: {\n//                         ...state.a.c,\n//                         e: state.a.c.e + action.num,\n//                     },\n//                 },\n//             }\n//     }\n//     return state;\n// }\n\n// function App() {\n//   const [res, dispatch] = useReducer<Reducer<Data, Action>, string>(reducer, 'zero', (param) => {\n//     return {\n//         a: {\n//             c: {\n//                 e: 0,\n//                 f: 0\n//             },\n//             d: 0\n//         },\n//         b: 0\n//     }\n//   });\n\n//   return (\n//     <div>\n//         <div onClick={() => dispatch({ type: 'add', num: 2 })}>加</div>\n//         <div>{JSON.stringify(res)}</div>\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/code/study/reacttongguanmiji/hook-test/src/App3.tsx"],"sourcesContent":["// import { Reducer, useReducer } from \"react\";\r\n\r\n// interface Data {\r\n//     a: {\r\n//         c: {\r\n//             e: number,\r\n//             f: number\r\n//         },\r\n//         d: number\r\n//     },\r\n//     b: number\r\n// }\r\n\r\n// interface Action {\r\n//     type: 'add',\r\n//     num: number\r\n// }\r\n\r\n// function reducer(state: Data, action: Action) {\r\n\r\n//     switch(action.type) {\r\n//         case 'add':\r\n//             return {\r\n//                 ...state,\r\n//                 a: {\r\n//                     ...state.a,\r\n//                     c: {\r\n//                         ...state.a.c,\r\n//                         e: state.a.c.e + action.num,\r\n//                     },\r\n//                 },\r\n//             }\r\n//     }\r\n//     return state;\r\n// }\r\n\r\n// function App() {\r\n//   const [res, dispatch] = useReducer<Reducer<Data, Action>, string>(reducer, 'zero', (param) => {\r\n//     return {\r\n//         a: {\r\n//             c: {\r\n//                 e: 0,\r\n//                 f: 0\r\n//             },\r\n//             d: 0\r\n//         },\r\n//         b: 0\r\n//     }\r\n//   });\r\n\r\n//   return (\r\n//     <div>\r\n//         <div onClick={() => dispatch({ type: 'add', num: 2 })}>加</div>\r\n//         <div>{JSON.stringify(res)}</div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}