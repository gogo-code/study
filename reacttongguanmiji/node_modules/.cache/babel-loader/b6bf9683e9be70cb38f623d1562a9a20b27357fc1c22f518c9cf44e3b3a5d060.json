{"ast":null,"code":"// import { useEffect, useRef } from \"react\";\n\n// function App() {\n//     const inputRef = useRef<HTMLInputElement>(null);\n\n//     useEffect(() => {\n//         inputRef.current?.focus();\n//     });\n\n//     return (\n//         <div>\n//             <input ref={inputRef}></input>\n//         </div>\n//     );\n// }\n\n// export default App;\n\n// import { useRef, useState } from \"react\";\n\n// function App() {\n//     const numRef = useRef<number>(0);\n//     const [, forceRender] = useState(0);\n\n//     return (\n//         <div>\n//             <div onClick={() => {\n//                 numRef.current += 1;\n//                 forceRender(Math.random());\n//             }}>{numRef.current}</div>\n//         </div >\n//     );\n// }\n\n// export default App;\n\n// import { useRef } from 'react';\n// import { useEffect } from 'react';\n// import React from 'react';\n// import { useImperativeHandle } from 'react';\n\n// interface RefProps {\n//   aaa: () => void;\n// }\n\n// const Guang: React.ForwardRefRenderFunction<RefProps> = (props, ref) => {\n//   const inputRef = useRef<HTMLInputElement>(null);\n\n//   useImperativeHandle(ref, () => {\n//     return {\n//       aaa() {\n//         inputRef.current?.focus();\n//       }\n//     }\n//   }, [inputRef]);\n\n//   return <div>\n//     <input ref={inputRef}></input>\n//   </div>\n// }\n\n// const WrapedGuang = React.forwardRef(Guang);\n\n// function App() {\n//   const ref = useRef<RefProps>(null);\n\n//   useEffect(()=> {\n//     console.log('ref', ref.current)\n//     ref.current?.aaa();\n//   }, []);\n\n//   return (\n//     <div className=\"App\">\n//       <WrapedGuang ref={ref}/>\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/code/study/reacttongguanmiji/hook-test/src/App4.tsx"],"sourcesContent":["// import { useEffect, useRef } from \"react\";\r\n\r\n// function App() {\r\n//     const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n//     useEffect(() => {\r\n//         inputRef.current?.focus();\r\n//     });\r\n\r\n//     return (\r\n//         <div>\r\n//             <input ref={inputRef}></input>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default App;\r\n\r\n// import { useRef, useState } from \"react\";\r\n\r\n// function App() {\r\n//     const numRef = useRef<number>(0);\r\n//     const [, forceRender] = useState(0);\r\n\r\n//     return (\r\n//         <div>\r\n//             <div onClick={() => {\r\n//                 numRef.current += 1;\r\n//                 forceRender(Math.random());\r\n//             }}>{numRef.current}</div>\r\n//         </div >\r\n//     );\r\n// }\r\n\r\n// export default App;\r\n\r\n// import { useRef } from 'react';\r\n// import { useEffect } from 'react';\r\n// import React from 'react';\r\n// import { useImperativeHandle } from 'react';\r\n\r\n// interface RefProps {\r\n//   aaa: () => void;\r\n// }\r\n\r\n// const Guang: React.ForwardRefRenderFunction<RefProps> = (props, ref) => {\r\n//   const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n//   useImperativeHandle(ref, () => {\r\n//     return {\r\n//       aaa() {\r\n//         inputRef.current?.focus();\r\n//       }\r\n//     }\r\n//   }, [inputRef]);\r\n\r\n//   return <div>\r\n//     <input ref={inputRef}></input>\r\n//   </div>\r\n// }\r\n\r\n// const WrapedGuang = React.forwardRef(Guang);\r\n\r\n// function App() {\r\n//   const ref = useRef<RefProps>(null);\r\n \r\n//   useEffect(()=> {\r\n//     console.log('ref', ref.current)\r\n//     ref.current?.aaa();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <WrapedGuang ref={ref}/>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;"],"mappings":"AAAA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}